{"version":3,"sources":["components/Control.js","taobao/Mytab.js","taobao/actionCreators.js","taobao/Home.js","taobao/Search.js","taobao/Picture.js","taobao/Cart.js","taobao/List.js","taobao/My.js","taobao/homereducer.js","taobao/Store.js","taobao/Load.js","App.js","index.js"],"names":["Component","Mytab","props","state","selectedTab","pathname","this","location","split","length","style","position","width","bottom","unselectedTintColor","tintColor","barTintColor","Item","title","key","icon","className","selectedIcon","selected","onPress","history","push","data-seed","homereducer","username","React","connect","store","withRouter","goods","dispatch","fetch","method","headers","then","res","json","type","data","useEffect","onFocus","onBlur","goBack","placeholder","autoplay","infinite","src","alt","class","map","item","i","onClick","localStorage","setItem","JSON","stringify","img","price","id","Search","autoFocusInst","focus","ref","parse","getItem","go","shoucang","document","getElementById","index","List","My","list","action","Object","assign","flag","arr","splice","rootReducer","combineReducers","createStore","compose","applyMiddleware","getState","next","window","__REDUX_DEVTOOLS_EXTENSION__","name","App","exact","path","component","Home","Picture","Load","Cart","render","to","ReactDOM"],"mappings":"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","file":"static/js/main.5fa721af.chunk.js","sourcesContent":["import { nodeName } from 'jquery';\r\n//组件名首字母一定要大写\r\nimport React, { Component } from 'react'\r\n\r\nexport class Control extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'1',done:true},//true为未完成\r\n                {title:'2',done:true},//false为已完成\r\n                {title:'3',done:false},\r\n                {title:'4',done:false}\r\n            ]\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value});\r\n    }\r\n    componentDidMount(){\r\n       this.input.focus();//默认焦点\r\n       let todos = localStorage.getItem('todos');\r\n       if(todos){\r\n           this.setState({\r\n               todos:JSON.parse(todos)\r\n           })\r\n       }\r\n    }\r\n    componentDidUpdate(preProps,preState){\r\n        if(preState.todos!==this.state.todos){\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        }   \r\n    }\r\n    addTodo=()=>{//添加函数\r\n        // this.state.todos.push({\r\n        //     title:this.state.inpValue\r\n        // })\r\n        if(this.state.inpValue==\"\"){\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false\r\n                },\r\n                ...this.state.todos\r\n            ]               \r\n        })\r\n        this.state.inpValue='';\r\n    }\r\n    deleteTodo=(idx)=>{//删除函数法一\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));//深拷贝一份\r\n        newTodos.splice(idx,1);//第一个参数为从第几个删，第二个参数为删多少个\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=> index != idx)\r\n        });\r\n    }\r\n    // deleteTodo=(idx)=>{//删除函数法二\r\n    //     // setState 是异步执行的，注意callback的用法\r\n    //     // this.setState({\r\n    //     //     todos: this.state.todos.filter((item,index)=>index!=idx)\r\n    //     // },()=>{\r\n    //     //     localStorage.setItem(\r\n    //     //         'todos',\r\n    //     //         JSON.stringify(this.state.todos)\r\n    //     //     )\r\n    //     // });\r\n    // }\r\n    toggle=(index)=>{//点击√到完成那一块\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos));\r\n        newTodos[index].done=!newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        })\r\n    }\r\n    renderTodos=(done)=>{\r\n        return this.state.todos.map((todo,idx)=>{\r\n            if(done==todo.done){\r\n                return <li>\r\n                    <input \r\n                        onClick={()=>this.toggle(idx)}\r\n                        checked={done} \r\n                        type=\"checkbox\"\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button onClick={()=>this.deleteTodo(idx)}>删除</button>\r\n                </li>\r\n            }        \r\n        })\r\n    }\r\n    render() {\r\n        const{todos,inpValue}=this.state;\r\n        let arr1=todos.filter(item=>!item.done);//正在进行的个数\r\n        let arr2=todos.filter(item=>item.done);//已经完成的个数\r\n        return (\r\n            <div className=\"box\">\r\n                <label htmlFor=\"inp\">todolist</label>\r\n                <input \r\n                    ip='inp'\r\n                    ref={inp=>this.input=inp} \r\n                    type='text' \r\n                    value={inpValue} \r\n                    onChange={this.handleChange}\r\n                />\r\n                <button onClick= {this.addTodo}>添加</button>\r\n                <h2>正在进行{arr1.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(false)}\r\n                </ul>\r\n                <h2>已经完成{arr2.length}</h2>\r\n                <ul>\r\n                    {this.renderTodos(true)}\r\n                </ul>\r\n                {/* 条件渲染 */}\r\n                {\r\n                    <button>登录</button>\r\n                }\r\n                <button>{2>3?'登录':'注册'}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Control;\r\n\r\n\r\n","import React from 'react';\r\nimport { TabBar } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nclass Mytab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTab: '/',\r\n        };\r\n    }\r\n    render() {\r\n        const { pathname } = this.props.location;\r\n        // console.log(pathname.split(\"/\"));//分割 可以查看路径为几层\r\n            \r\n        if(pathname.split(\"/\").length > 2){\r\n            return null;\r\n        }\r\n        return (\r\n            <div style={ {\r\n                position: 'fixed',\r\n                width: '100%',\r\n                bottom: 0\r\n            } }>\r\n                <TabBar\r\n                    unselectedTintColor=\"#949494\"\r\n                    tintColor=\"orange\"\r\n                    barTintColor=\"white\"\r\n                >\r\n                    <TabBar.Item\r\n                        title=\"首页\"\r\n                        key=\"home\"\r\n                        icon={ \r\n                            <i className='iconfont icon-Homehomepagemenu'></i>\r\n                        }\r\n                        selectedIcon={ \r\n                            <i className='iconfont icon-Homehomepagemenu1'></i>\r\n                        }\r\n                        selected={ pathname === '/' }//默认是首页  /  记得 在App.js中也得使用  /\r\n                        onPress={ () => {\r\n                            this.props.history.push('/');\r\n                        } }\r\n                        data-seed=\"logId\"\r\n                    >\r\n                    </TabBar.Item>\r\n                    <TabBar.Item\r\n                        title=\"收藏\"\r\n                        key=\"cart\"\r\n                        icon={\r\n                            <i className='iconfont icon-shoucang'></i>\r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-favourited'></i>\r\n                        } \r\n                        selected={ pathname === '/cart' }\r\n                        onPress={ ()=>{\r\n                            if(this.props.homereducer.username==''){\r\n                                this.props.history.push('/home/load');\r\n                            }else{\r\n                                this.props.history.push('/cart');\r\n                            }\r\n                         }}\r\n                        data-seed=\"logId1\"\r\n                    >\r\n                    </TabBar.Item>\r\n                    <TabBar.Item\r\n                        title=\"订单列表\"\r\n                        key=\"list\"\r\n                        icon={\r\n                            <i className='iconfont icon-dingdan'></i>\r\n                        }\r\n                        selectedIcon={\r\n                            <i className='iconfont icon-icon'></i>\r\n                        } \r\n                        selected={ pathname === '/list' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/list');\r\n                        } }\r\n                    >\r\n\t\t\t        </TabBar.Item>\r\n                    <TabBar.Item\r\n                        title=\"我的淘宝\"\r\n                        key=\"my\"\r\n                        icon={ \r\n                            <i className='iconfont icon-wode'></i> \r\n                        }\r\n                        selectedIcon={ \r\n                            <i className='iconfont icon-wodedangxuan'></i>\r\n                        } \r\n                        selected={ pathname === '/my' }\r\n                        onPress={ () => {\r\n                            this.props.history.push('/my');\r\n                        } }\r\n                    >\r\n\t\t\t        </TabBar.Item>\r\n                </TabBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default connect(store=>store)(withRouter(Mytab));//高阶组件","const login = ()=>{\r\n    return (dispatch)=>{\r\n        fetch('https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                dispatch({\r\n                    type: 'LOGIN',\r\n                    username: res.data.name\r\n                })\r\n            })\r\n    }\r\n}\r\nconst goods = ()=>{\r\n    return (dispatch)=>{\r\n        fetch('https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/getgoodslist', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                dispatch({\r\n                    type:'GOODS',\r\n                    data :res.data,\r\n                })\r\n            })\r\n    }  \r\n}\r\n\r\n\r\nexport {login,goods}\r\n","import React,{useEffect} from 'react';\r\nimport { SearchBar,Carousel} from 'antd-mobile';\r\nimport './Carousel.css';\r\nimport { goods } from './actionCreators';\r\nimport { connect } from 'react-redux';\r\nconst Home = (props)=>{\r\n    useEffect(()=>{\r\n        props.dispatch(goods());\r\n    },[])\r\n    return(\r\n        \r\n        <div>\r\n            {/* 搜索框 */}\r\n            <div className=\"searchbar\">\r\n                <SearchBar\r\n                    onFocus={()=>{props.history.push('./home/search')}} \r\n                    onBlur={()=>{props.history.goBack()}}\r\n                    placeholder={'搜索宝贝店铺'}\r\n                ></SearchBar>\r\n            </div>\r\n            {/* 轮播图 */}\r\n            <Carousel autoplay={true} infinite>\r\n                <div>\r\n                    <h3><img src=\"https://aecpm.alicdn.com/simba/img/TB1CWf9KpXXXXbuXpXXSutbFXXX.jpg_q50.jpg\" alt=\"logo\" /></h3>\r\n                </div>\r\n                <div>\r\n                    <h3><img src=\"https://aecpm.alicdn.com/simba/img/TB15tIjGVXXXXcoapXXSutbFXXX.jpg\" alt=\"logo\" /></h3>\r\n                </div>\r\n                <div>\r\n                    <h3><img src=\"//gw.alicdn.com/imgextra/i3/56/O1CN01QKKUjx1CHgoKDEJx6_!!56-0-lubanu.jpg\" alt=\"logo\" /></h3>\r\n                </div>\r\n                <div>\r\n                    <h3><img src=\"//gw.alicdn.com/imgextra/i1/68/O1CN01BQL7ux1CNBZ0UTqaw_!!68-0-lubanu.jpg\" alt=\"logo\" /></h3>\r\n                </div>\r\n                <div>\r\n                    <h3><img src=\"//gw.alicdn.com/imgextra/i4/191/O1CN01k3oS9i1DHWHMwyzaH_!!191-0-lubanu.jpg\"  alt=\"logo\" /></h3>\r\n                </div>\r\n                <div>\r\n                    <h3><img src=\"//gw.alicdn.com/imgextra/i1/180/O1CN01ieoBtg1DCTvM4rVsG_!!180-0-lubanu.jpg\" alt=\"logo\" /></h3>\r\n                </div>\r\n                <div>\r\n                    <h3><img src=\"https://img.alicdn.com/tps/i4/https://img.alicdn.com/imgextra/i3/6000000002256/O1CN01pfjUsn1SXI9hORvMZ_!!6000000002256-2-octopus.png\" alt=\"logo\" /></h3>\r\n                </div>\r\n                <div>\r\n                    <h3><img src=\"//gw.alicdn.com/imgextra/i3/142/O1CN01zEaSig1Cv4sBDhhRU_!!142-0-ppp-picassogw.jpg\" alt=\"logo\" /></h3>\r\n                </div>\r\n            </Carousel>\r\n            <p class=\"p\">❤-----猜你喜欢-----❤</p>\r\n            {/* 商品列表 */}\r\n            <div className=\"list\">\r\n                <ul class=\"ul\" >\r\n                    {   \r\n                    (props.data.length == 0)?null:\r\n                        props.data.map((item,i)=>{\r\n                            return <li onClick={()=>{props.history.push(\"./home/picture\",i,localStorage.setItem('item',JSON.stringify(item)))}}>\r\n                                <img src={item.img} alt=\"\" />\r\n                                <p class=\"name\">{item.title}</p>\r\n                                <span class='price'>￥{item.price}元</span>\r\n                                <span class=\"number\">{item.id}人已购买</span>\r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>     \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>(\r\n    {data:state.homereducer.data}\r\n)\r\nexport default connect(mapStateToProps)(Home);","import React from 'react';\r\nimport {SearchBar} from 'antd-mobile';\r\nclass Search extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        this.autoFocusInst.focus();\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"searchBottom\">\r\n                <SearchBar\r\n                    placeholder={'宝贝'}\r\n                    onBlur={()=>{this.props.history.goBack()}} \r\n                    ref={ref => this.autoFocusInst = ref}\r\n                ></SearchBar>\r\n             </div>\r\n        )\r\n    }\r\n}   \r\nexport default Search;","import React ,{useEffect}from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {goods} from \"./actionCreators\"\r\nconst Picture = (props)=>{\r\n    useEffect(()=>{\r\n        props.dispatch(goods());\r\n    },[])\r\n    const collect = ()=>{  \r\n        props.dispatch({\r\n            type:'COLLECT',\r\n            shoucang :JSON.parse(localStorage.getItem('item'))\r\n        }) \r\n    }\r\n    return(\r\n        <div className=\"background\">\r\n            {/* 商品背景图和返回键 */}\r\n            <img src= {JSON.parse(localStorage.getItem('item')).img}/>\r\n            <div className='return'\r\n                    onClick={()=>{props.history.go(-1)}}\r\n                ><i className='iconfont icon-fanhui'></i>\r\n            </div>\r\n            {/* 底部按钮 */}\r\n            <div className=\"bottom\">\r\n                <ul className=\"btnBox1\">\r\n                    <li title=\"店铺\" class=\"shop\">\r\n                            <i className='iconfont icon-shop'></i>\r\n                            <p>店铺</p>\r\n                        </li>\r\n                    <li title=\"客服\" class=\"kefu\">\r\n                        <i className='iconfont icon-kefu'></i>\r\n                        <p>客服</p>\r\n                    </li>\r\n                    \r\n                    <li title=\"收藏\" class=\"shoucang\" onClick={()=>{  \r\n                        if(props.homereducer.username == ''){\r\n                            props.history.push('/home/load');\r\n                        }else{\r\n                            collect()\r\n                            document.getElementById('tr').className = 'iconfont icon-shoucang1'\r\n                        }\r\n                    }}>{\r\n                        <i id='tr' className='iconfont icon-shoucang'></i>\r\n                    }\r\n                        <p>收藏</p>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"btnBox2\">\r\n                    <button className=\"btn add\">加入购物车</button>\r\n                    <button className=\"btn buy\">立即购买</button>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    )\r\n}   \r\nconst mapStateToProps=(state)=>{\r\n    // {username:state.homereducer.username}\r\n    return state\r\n}\r\n\r\nexport default connect(mapStateToProps)(Picture); \r\n\r\n// export default connect(store=>{return store})(Picture);\r\n //props.username\r\n                    // ?\r\n                    // {\r\n                    //     document.getElementById(\"tr\").className=\"iconfont icon-shoucang1\"\r\n                    // }\r\n                        \r\n                    // :\r\n                        // props.history.push('./load')\r\n                    // onFocus={()=>{props.shoucang.push(props.data[props.location.state])}}","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './Carousel.css'\r\nconst Cart = (props) => {\r\n    return (\r\n        <div>\r\n            {\r\n                <div class=\"list2\">\r\n                    <ul class=\"collect\">\r\n                        {\r\n                            (props.shoucang.length == 0)?null:\r\n                                props.shoucang.map((item,i)=>{\r\n                                    return <li>\r\n                                    <img src={item.img}/>                    \r\n                                    <span><p>{item.title}</p></span>\r\n                                    <button \r\n                                    onClick={()=>{\r\n                                        props.dispatch({\r\n                                            type:'DELETE',\r\n                                            index:i\r\n                                        })\r\n                                }}\r\n                                    >删除该收藏</button>\r\n                                </li>\r\n                                })              \r\n                        }\r\n                    </ul>\r\n                </div>      \r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>(\r\n    {username:state.homereducer.username},\r\n    {shoucang:state.homereducer.shoucang}\r\n)\r\nexport default connect(mapStateToProps)(Cart);\r\n// export default connect(store=>{return store})(Cart);\r\n","import React from 'react'\r\n\r\nconst List = ()=>{\r\n    return(\r\n        <div>\r\n            订单列表\r\n        </div>\r\n    )\r\n}\r\nexport default List;\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst My= ()=>{\r\n    return(\r\n        <div>\r\n            {/* <i style={{fontSize:400,color:'red'}} className='iconfont icon-wode'></i> */}\r\n            我的淘宝\r\n        </div>\r\n    )\r\n}\r\nexport default My;","let list = {\r\n    data:[],\r\n    shoucang:[],\r\n    username:''\r\n}\r\nconst homereducer = (state=list,action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            return Object.assign({},state,{username:action.username})\r\n        case 'GOODS':   \r\n             return Object.assign({},state,{data:action.data})\r\n        case 'COLLECT':\r\n            let flag=1;\r\n            for(let i=0;i<state.shoucang.length;i++){\r\n                if(state.shoucang[i].id==action.shoucang.id){\r\n                    flag=0;\r\n                    break;\r\n                }\r\n            }\r\n            if(flag==0){\r\n                return state;\r\n            }else{\r\n                return Object.assign({},state,{shoucang:[...state.shoucang,action.shoucang]})   \r\n            }\r\n             \r\n        case 'DELETE':\r\n            let arr=[...state.shoucang];\r\n            arr.splice(action.index,1);\r\n            return Object.assign({},state,{shoucang:arr});  \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default homereducer;\r\n","import {combineReducers, compose,createStore,applyMiddleware} from 'redux';\r\nimport homereducer from './homereducer';\r\n// import thunk from 'redux-thunk'\r\nlet rootReducer = combineReducers({\r\n    homereducer,\r\n\r\n    //这里代表的是 todo:todo,home:home\r\n});\r\n// function logger({ getState }) {\r\n//     return (next) => (action) => {\r\n//         console.log('will dispatch', action)\r\n//         // 调用 middleware 链中下一个 middleware 的 dispatch。\r\n//         let returnValue = next(action)\r\n//         console.log('state after dispatch', getState())\r\n//         // 一般会是 action 本身，除非\r\n//         // 后面的 middleware 修改了它。\r\n//         return returnValue\r\n//     }\r\n// }\r\nconst thunk = ({ dispatch, getState }) => (next) => (action) => {\r\n    if (typeof action === 'function') {\r\n        return action(dispatch, getState);\r\n    }\r\n    return next(action);\r\n};\r\nlet store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ),\r\n    \r\n);\r\n// let createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\r\n// let store = createStoreWithMiddleware(homereducer)\r\nexport default store;","import React  from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {login} from \"./actionCreators\"\r\nimport './Carousel.css'\r\nconst Load = (props) => {\r\n    const log = ()=>{\r\n        props.dispatch(login())\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                props.username\r\n                ?props.history.goBack()\r\n                :\r\n               <div>\r\n                    <input type=\"text\" class=\"text\" placeholder=\"请输入用户名\"></input>\r\n                    <br/>\r\n                    <input type=\"password\" class=\"password\" placeholder=\"请输入密码\"></input>\r\n                    <br/>\r\n                    {\r\n                        <button class=\"btn2\" onClick={ log }>登录</button>\r\n                    }              \r\n                </div>\r\n            } \r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>(\r\n    {username:state.homereducer.username}  \r\n)\r\nexport default connect(mapStateToProps)(Load);\r\n// export default connect(store=>{return store})(Load);\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport {BrowserRouter as Router,Redirect,Route,NavLink,Switch} from 'react-router-dom'\r\n// import Header from './pagess/Header';\r\n// import Home from './pagess/Home';\r\n// import Doc from './pagess/Doc';//文档\r\n// import Tuto from './pagess/Tuto';//教程\r\n// import Blog from './pagess/Blog';//博客\r\n// import Comm from './pagess/Comm';//社区\r\n// import Login from './pagess/Login';//登陆\r\n// import routes from './router.config';\r\n// import {Button,TabBar} from 'antd-mobile';\r\n\r\n// import App from './App';\r\nimport Mytab from './taobao/Mytab';\r\nimport Home from './taobao/Home';\r\nimport Search from './taobao/Search';\r\nimport Picture from './taobao/Picture';\r\nimport Cart from './taobao/Cart';\r\nimport List from './taobao/List';\r\nimport My from './taobao/My';\r\nimport {Provider} from 'react-redux'\r\nimport store from './taobao/Store'\r\nimport Load from './taobao/Load'\r\n\r\n// // 我的第二次作业\r\n// export const RouteWithSubRoutes = (route,key)=>{//判断是否为权限路由，此函数在app中也有用到，命名导出\r\n// \tif(!route.pri){//若不是权限路由，返回普通路由页面，并显示内容\r\n// \t\treturn(\r\n// \t\t\t<Route\r\n// \t\t\t\tpath={route.path}\r\n// \t\t\t\trender={props => (\r\n// \t\t\t\t\t<route.component {...props} routes={route.routes} />\r\n// \t\t\t\t)}\r\n// \t\t\t/>\r\n// \t\t)\t\r\n// \t}else{//获得权限 进入权限路由页，显示内容，其路径也跟随改变\r\n// \t\treturn (\r\n// \t\t\t<PrivateRoute key={key} path={route.path}>\r\n// \t\t\t\t<Route\r\n// \t\t\t\t\tpath={route.path}\r\n// \t\t\t\t\trender={props => (\r\n// \t\t\t\t\t\t<route.component {...props} routes={route.routes} />\r\n// \t\t\t\t\t)}\r\n// \t\t\t\t/>\r\n// \t\t\t</PrivateRoute>\r\n// \t\t);\t\r\n// \t}\t\r\n// }\r\n\r\n// const PrivateRoute = ({children,...route}) =>{\r\n// \treturn (\r\n// \t\t<Route\r\n// \t\t\t{...route}\r\n// \t\t\trender={({location})=>\r\n// \t\t\t\tlocalStorage.getItem('key')//本地存储有值的话直接返回页面，没有的话跳转到登陆页面\r\n// \t\t\t\t?children\r\n// \t\t\t\t:(\r\n// \t\t\t\t<Redirect\r\n// \t\t\t\t\tto={{\r\n// \t\t\t\t\t\tpathname:'/login',\r\n// \t\t\t\t\t\tstate:location\r\n// \t\t\t\t\t}}>\r\n// \t\t\t\t</Redirect>\r\n// \t\t\t)}\r\n// \t\t></Route>\r\n// \t)\r\n// }\r\n// const App = ()=>{\r\n// \treturn (\r\n// \t\t<Router>\r\n// \t\t\t{/* 导航 */}\r\n// \t\t\t<Header />\r\n// \t\t\t<Switch>\r\n// \t\t\t\t{\r\n// \t\t\t\t\troutes.map((rests,key)=>{\r\n// \t\t\t\t\t\treturn <RouteWithSubRoutes  {...rests} key={key}/>\r\n// \t\t\t\t\t})\r\n// \t\t\t\t}\r\n// \t\t\t</Switch>\r\n// \t\t</Router>\r\n// \t)\r\n// }\r\n// export default App;\r\n\r\n// //第二次作业截止后老师的代码\r\n// export const RouteWithSubRoutes = (props)=>{//判断是否为权限路由，此函数在app中也有用到，命名导出\r\n//     \tif(!props.pri){//若不是权限路由，返回普通路由页面，并显示内容\r\n//     \t\treturn(\r\n//     \t\t\t<Route\r\n//     \t\t\t\tpath={props.path}\r\n//     \t\t\t\trender={(pro) => (\r\n//     \t\t\t\t\t<props.component {...pro} routes={props.routes} />\r\n//     \t\t\t\t)}\r\n//     \t\t\t/>\r\n//     \t\t)\t\r\n//     \t}else{//获得权限 进入权限路由页，显示内容，其路径也跟随改变\r\n//     \t\treturn (\r\n//     \t\t\t<PrivateRoute {...props}>\r\n//     \t\t\t</PrivateRoute>\r\n//     \t\t);\t\r\n//     \t}\t\r\n//     }\r\n    \r\n// const PrivateRoute = ({routes,component:Com,...rest}) =>{\r\n//     return (\r\n//     \t<Route\r\n//     \t\t{...rest}\r\n//     \t\trender={({location})=>\r\n//     \t\t\tlocalStorage.getItem('key')//本地存储有值的话直接返回页面，没有的话跳转到登陆页面\r\n//     \t\t\t?<Com routes={routes}/>\r\n//     \t\t\t:(\r\n//     \t\t\t<Redirect\r\n//     \t\t\t\tto={{\r\n//     \t\t\t\t\tpathname:'/login',\r\n//     \t\t\t\t\tstate:location\r\n//     \t\t\t\t}}>\r\n//     \t\t\t</Redirect>\r\n//     \t\t)}\r\n//     \t></Route>\r\n//     )\r\n// }\r\n// const App = ()=>{\r\n// \treturn (\r\n// \t\t<Router>\r\n// \t\t\t{/* 导航 */}\r\n// \t\t\t<Header />\r\n// \t\t\t<Switch>\r\n// \t\t\t\t{\r\n// \t\t\t\t\troutes.map((props)=>{\r\n// \t\t\t\t\t\treturn <RouteWithSubRoutes  {...props} />\r\n// \t\t\t\t\t})\r\n// \t\t\t\t}\r\n// \t\t\t</Switch>\r\n// \t\t</Router>\r\n// \t)\r\n// }\r\n\r\n// const App = ()=>{\r\n// \treturn <Router>\r\n// \t\t<Header />\r\n// \t\t<Switch>\r\n// \t\t\t<Route exact path='/' component={Home} />\r\n// \t\t\t<PrivateRoute path='/doc' component={Doc} />\r\n// \t\t\t{/* {<Route path='/doc/:id' component={Doc} /> } */}\r\n// \t\t\t<PrivateRoute path='/tuto' component={Tuto}/>\r\n// \t\t\t<PrivateRoute path='/blog' component={Blog}/>\r\n// \t\t\t<Route path='/comm' component={Comm}/>\r\n// \t\t\t<Route path='/login' component={Login}/>\r\n// \t\t\t{/* <Route path='*' component={}/> */}\r\n// \t\t\t{\r\n// \t\t\t\troutes.map(({pri,route})=>{\r\n// \t\t\t\t\tif(pri){\r\n// \t\t\t\t\t\treturn <PrivateRoute {...route} / >\r\n// \t\t\t\t\t}\r\n// \t\t\t\t\treturn <Route {...route} />\r\n// \t\t\t\t})\r\n// \t\t\t}\r\n// \t\t</Switch>\r\n// \t</Router>\r\n// }\r\n\r\n// //我的淘宝 第三次作业\r\n// const App = ()=>{\r\n// \treturn <Router>\r\n// \t\t<Switch>\r\n// \t\t\t{/* 默认是首页  /  记得 在App.js中也得使用 */}\r\n// \t\t\t<Route exact path='/' component={Home}/>\r\n// \t\t\t{/* 搜索框跳转 */}\r\n// \t\t\t<Route path='/home/search' component={Search} />\r\n// \t\t\t{/* 详情页跳转 */}\r\n// \t\t\t<Route path='/home/picture' component={Picture} />\r\n// \t\t\t<Route path='/cart' component={Cart}/> \t\r\n// \t\t\t<Route path='/list' component={List}/> \r\n// \t\t\t<Route path='/my' component={My}/> \r\n// \t\t\t<Route render={()=> <Redirect to='/home' />} />\r\n\r\n// \t\t</Switch>\r\n// \t\t<Mytab />\r\n// \t</Router>\r\n// }\r\n\r\n// //class_07_redux\r\n// import store from './reduxDemo/Store'\r\n// import {Provider} from 'react-redux'\r\n// import Todos from './reduxDemo/Todos'\r\n// import Input from './reduxDemo/Input'\r\n// import Home from './reduxDemo/Home'\r\n// import 'antd-mobile/dist/antd-mobile.css'\r\n\r\n// const App = () =>{\r\n// \t// let todos = store.getState();\r\n// \tconst [todos,setTodos] = useState(store.getState());\r\n// \tuseEffect(()=>{\r\n// \t\tstore.subscribe(()=>{\r\n// \t\t\tsetTodos(store.getState())\r\n// \t\t})\r\n// \t},[])\r\n// \tconsole.log(todos);\r\n// \treturn <div>\r\n// \t\t{\r\n// \t\t\ttodos.map((item)=><li>{item}</li>)\r\n// \t\t}\r\n// \t\t<button  onClick={()=>{\r\n// \t\t\tstore.dispatch({\r\n// \t\t\t\ttype:'add_todo',\r\n// \t\t\t\tvalue:'456'\r\n// \t\t\t})\r\n// \t\t}}>添加</button>\r\n// \t</div>\r\n// }\r\n\r\n//class_08_redux  实现todolist\r\n//Redux-提供可预测的状态管理的容器\r\n//解决跨层级床底属性的问题\r\n//action-是更新状态的唯一途径，就是一个普通的对象一定包含一个type属性\r\n//reducer-是一个纯函数，没有副作用，有相同的输入，一定会有相同的输出\r\n//store-\r\n\r\n// let obj = {user:'123'}\r\n// let obj1 = Object.assign(obj,{user:456})\r\n// console.log(obj === obj1);\r\n// console.log(obj,obj1);\r\n// const App = ()=>{\r\n// \treturn <Provider store={store}>\r\n// \t\t<Router>\r\n// \t\t\t<Home />\r\n// \t\t\t<Input />\r\n// \t\t\t<Todos />\r\n// \t\t</Router>\r\n\t\t\r\n// \t</Provider>\r\n// }\r\n\r\n// const App = ()=>{\r\n// \treturn <div>\r\n// \t\t<Button type=\"primary\">开始使用</Button>\r\n// \t</div>\r\n// }\r\n// //我的淘宝 ---- 大作业\r\nconst App = ()=>{\r\n\treturn <Provider store={store}>\r\n\t\t<Router>\r\n\t\t<Switch>\r\n\t\t\t{/* 默认是首页  /  记得 在App.js中也得使用 */}\r\n\t\t\t<Route exact path='/' component={Home}/>\r\n\t\t\t{/* 搜索框跳转 */}\r\n\t\t\t<Route path='/home/search' component={Search} />\r\n\t\t\t{/* 详情页跳转 */}\r\n\t\t\t<Route path='/home/picture' component={Picture} />\r\n\t\t\t{/* 登录页跳转 */}\r\n\t\t\t<Route path='/home/load' component={Load} />\r\n\t\t\t<Route path='/cart' component={Cart}/> \t\r\n\t\t\t<Route path='/list' component={List}/> \r\n\t\t\t<Route path='/my' component={My}/> \r\n\t\t\t<Route render={()=> <Redirect to='/home' />} />\r\n\r\n\t\t</Switch>\r\n\t\t<Mytab/>\r\n\t</Router>\r\n\t</Provider>\r\n}\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Home from './pages/Home';//默认导出，只能导出一个\n// import {Home} from './pages/Home';//命名导出，起什么名字就叫什么名字\nimport Control from './components/Control';\n// import Demo01 from './pages/Demo01';\n// import App from './App';\n// import Hoc,{Detail} from './pages/Hoc';//{Detail}为命名导出\n// import Hook from './pages/Hook';\n// import Context from './pages/Context';\n// import './index.css';\nimport App from './App';//全称为\"./APP.js\"\n// import * as serviceWorker from './serviceWorker';\nimport 'antd-mobile/dist/antd-mobile.css';\n\n//例子1渲染\n// // let ele = <h1 id=\"title\">he</h1>;\n// // let ele=React.createElement(\n// //     'h1',\n// //     {id:'title'},\n// //     \"hello react1111\"\n// // );\n// /*好几种写法*/\n// // let ele=React.createElement(\n// //        'h1',\n// //        {id:'title'},\n// //        React.createElement('div',{},'hello'),\n// //        'react'\n// // )\n// let ele = <h1 id=\"title\" className=\"tit\">\n//     <div>hello</div>\n//     react\n//     </h1>;\n// //将jsx对象渲染到DOM中\n//     let ReactDOM={\n//       render(eleObj,container){\n//         //解构\n//         const{type,props}=eleObj;\n//         //创建第一层结点\n//         let ele=document.createElement(type);\n//         //遍历属性对象，将属性添加到第一层结点对象上\n//         for (const prop in props) {\n//           //  if(prop=='className'){\n//           //    ele.setAttribute('class',props[prop]);\n//           //  }\n//           if(prop=='children'){\n            \n//               if(typeof props.children == 'string'){\n//                 const txtNode=document.createTextNode(props[prop]);\n//                 ele.appendChild(txtNode);\n//                 break;\n//               }\n//               //将第一层结点对象的子元素添加进去\n//               props.children.forEach(child=>{\n//                 if(typeof child=='string'){\n//                   const txtNode=document.createTextNode(child);\n//                   ele.appendChild(txtNode);\n//                 }\n//                 else{\n//                   ReactDOM.render(child,ele);\n//                 }\n//               })\n//             }\n//           else{\n//             ele[prop]=props[prop];\n//           }\n          \n//         }\n//         //将第一层DOM结点添加到container中。\n//         container.appendChild(ele);\n//       }\n//     }\n// console.log(ele);\n// ReactDOM.render(\n//   // <React.StrictMode>\n//   //   <App />\n//   // </React.StrictMode>,\n//   // <h1>hello react</h1>,\n//   ele,\n//   document.getElementById('root')\n// );\n/*\n1、原生JS，DOM操作(jQuery)\n2、React:开发效率高，性能高\n3、环境搭建，会创建一个项目并且运行\n4、JSX语法\n*/\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n// //例子二渲染,时间\n// setInterval(()=>{\n//   let ele = <h1 id=\"title\" className=\"tit\">\n//   <div>当前时间</div>\n//   {new Date().toLocaleString()}\n//   </h1>\n\n//     console.log(ele);\n//     ReactDOM.render(\n//         ele,\n//         document.getElementById('root')\n//     )\n// },1000);\n\n// // 例子三函数组件，UI（展示），木偶组件\n// function App(props){\n//   console.log(props);\n//   const{title,id}=props;\n//   return <div>\n//     <h1>组件</h1>\n//     <div>{props.title}</div>\n//     <div>hello</div>  \n//     <div>{id}</div>\n//     </div>\n// }\n// ReactDOM.render(\n//   <App title=\"你好\" id=\"123\"/>,\n//   document.getElementById('root')\n// )\n\n//智能组件\n// class Demo extends React.Component{\n//   render(){\n//     return<div>\n//       <App title=\"任意值\" id=\"app\" />\n//       <App title=\"任意值\" id=\"app\" />\n//       <App title=\"任意值\" id=\"app\" />\n//       <App title=\"任意值\" id=\"app\" />\n//     </div>\n//   }\n// }\n// ReactDOM.render(\n//   <Demo title=\"任意值\" id=\"app\"/>,\n//   document.getElementById('root')\n// );\n// class Demo extends React.Component{\n//   constructor(){\n//   super();\n//   //声明状态\n//   this.state={\n//     name:'tom'\n//   }\n//   setTimeout(()=>{\n//   this.setState({name:'jerry'})\n//   },3000)\n// }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title=\"任意值\" id=\"app\" />\n//     </div>\n//   }\n// }\n// ReactDOM.render(\n//   <Demo title=\"任意值\" id=\"app\"/>,\n//   document.getElementById('root')\n// );\n\n// // 先安装jquery再执行此后的代码\n// import $ from \"jquery\";\n// console.log($);\n// ReactDOM.render(\n//     <div />,\n//     document.getElementById('root')\n//   );\n\n// //列表序号\n// class Home extends React.Component{\n//     constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       data:[1,2,3]\n//     }\n//     setTimeout(()=>{\n//       this.setState({data:[5,6,7,8]})\n//     },500)\n//   }\n//     render(){\n//       return <ul>\n//         {\n//           this.state.data.map(\n//             (item)=><li>{item}</li>\n//           )\n//         }\n//       </ul>\n//   }\n// }\n//   ReactDOM.render(\n//   <Home title=\"anyone\"/>,\n//     document.getElementById('root')\n// );\n\n//类爬虫\n// class Home extends React.Component{\n//     constructor(){\n//     super();\n//     //声明状态\n//     this.state={\n//       data:[]\n//     }\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(data=>{\n//         console.log(data);\n//         this.setState({data:data.data})\n//     })\n//   }\n//     render(){\n//       const {data}=this.state;\n//       return <ul>\n//         {\n//           this.state.data.map(\n//             (item)=><li>{item.title}</li>\n//           )\n//         }\n//       </ul>\n//   }\n// }\n//   ReactDOM.render(\n//   <Home title=\"anyone\"/>,\n//     document.getElementById('root')\n// );\n\n// //页面切换\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//     // this.handleClick = this.handleClick.bind(this)\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   getData = (page)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+page)\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const { data } = this.state;\n//     const btns = [1,2,3,4,5];\n//     return <div>\n//       {\n//         btns.map(\n//           (item)=>(\n//             <button \n//               key={item}\n//               onClick={()=>this.getData(item)}\n//             >\n//               {item}\n//             </button>\n//         ))\n//       }\n//       <List data={data}/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Home data='abc'/>,\n//   document.getElementById('root')\n// );\n\n//导入与导出  只需渲染的这段代码 加上导入其他三个文件，List.js,Home.js,Buttons.js\n// ReactDOM.render(\n//     <Home data='abc'/>,\n//     document.getElementById('root')\n//   );\n\n// 受控组件，todolist\n// ReactDOM.render(\n//     <Control />,\n//     document.getElementById('root')\n// );\n//红框和tom那个\n// ReactDOM.render(\n//     <Demo01 />,\n//     document.getElementById('root')\n// );\n//\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n// let url = 'https://www.fastmock.site/mock/9e4bbf9e35ad15942010865690c87ac6/api/login';\n// fetch(url, {\n//     method: 'post',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n// })\n// .then(res=>res.json())\n// .then(res=>console.log(res))\n\n// ReactDOM.render(\n//     <div><Hoc/><Detail/></div>,\n//     document.getElementById('root')\n// );\n// ReactDOM.render(\n//     <div>\n//         <Context.Provider value=\"123\">\n//             <Hook/>\n//         </Context.Provider>\n//     </div>,\n//     document.getElementById('root')\n// );\n\n\n\n"],"sourceRoot":""}